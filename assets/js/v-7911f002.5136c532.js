(self.webpackChunkblog=self.webpackChunkblog||[]).push([[172],{241:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>p});const p={key:"v-7911f002",path:"/guide/vue.html",title:"vue3基础",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"一些tips",slug:"一些tips",children:[{level:3,title:"v-once",slug:"v-once",children:[]},{level:3,title:"ref",slug:"ref",children:[]},{level:3,title:"provide和inject",slug:"provide和inject",children:[]}]},{level:2,title:"组件",slug:"组件",children:[{level:3,title:"父子组件之间的通信",slug:"父子组件之间的通信",children:[]},{level:3,title:"插槽",slug:"插槽",children:[]},{level:3,title:"动态组件",slug:"动态组件",children:[]},{level:3,title:"异步组件",slug:"异步组件",children:[]}]},{level:2,title:"动画/过渡效果",slug:"动画-过渡效果",children:[{level:3,title:"基础过渡动画绑定事件",slug:"基础过渡动画绑定事件",children:[]},{level:3,title:"单元素组件的过渡",slug:"单元素组件的过渡",children:[]},{level:3,title:"使用js编写过渡动画",slug:"使用js编写过渡动画",children:[]},{level:3,title:"列表动画",slug:"列表动画",children:[]},{level:3,title:"状态动画",slug:"状态动画",children:[]}]},{level:2,title:"vue中的高级语法",slug:"vue中的高级语法",children:[]}],filePathRelative:"guide/vue.md",git:{updatedTime:162694655e4,contributors:[]}}},878:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>t});const p=(0,a(252).uE)('<h1 id="vue3基础" tabindex="-1"><a class="header-anchor" href="#vue3基础" aria-hidden="true">#</a> vue3基础</h1><h2 id="一些tips" tabindex="-1"><a class="header-anchor" href="#一些tips" aria-hidden="true">#</a> 一些tips</h2><h3 id="v-once" tabindex="-1"><a class="header-anchor" href="#v-once" aria-hidden="true">#</a> v-once</h3><ul><li>标签使用v-once表示标签只被渲染一次，以后即使数据改变也不重新渲染</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                count<span class="token operator">:</span><span class="token number">1</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n            &lt;div @click=&#39;count+=1&#39; v-once&gt;\n                {{count}}    \n            &lt;/div&gt;   \n            </span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="ref" tabindex="-1"><a class="header-anchor" href="#ref" aria-hidden="true">#</a> ref</h3><ul><li>ref用于获取dom节点，在需要获取的节点上添加ref=&#39;count&#39;，使用需要在mounted之中(之前dom节点都没有创建完成)</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                count<span class="token operator">:</span><span class="token number">1</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>count<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n            &lt;div &gt;\n                &lt;div ref=&#39;count&#39;&gt;\n                {{count}}\n                &lt;/div&gt;    \n            &lt;/div&gt;   \n\n            </span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#root&#39;</span><span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><ul><li>ref用于获取子组件这个对象，同时可以使用子组件中的方法</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                count<span class="token operator">:</span><span class="token number">1</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>common<span class="token punctuation">)</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>common<span class="token punctuation">.</span><span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n            &lt;div &gt;\n                &lt;common-item  ref=&#39;common&#39;/&gt;  \n            &lt;/div&gt;   \n\n            </span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;common-item&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        methods<span class="token operator">:</span><span class="token punctuation">{</span>\n            <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">     \n             &lt;div&gt; hello world&lt;/div&gt;\n            </span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#root&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h3 id="provide和inject" tabindex="-1"><a class="header-anchor" href="#provide和inject" aria-hidden="true">#</a> provide和inject</h3><ul><li>用于多层嵌套传递参数的</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                count<span class="token operator">:</span><span class="token number">1</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        provide<span class="token operator">:</span><span class="token punctuation">{</span>\n            count<span class="token operator">:</span><span class="token number">1</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n            &lt;div &gt;\n                &lt;child  :count=&#39;count&#39;/&gt;  \n            &lt;/div&gt;   \n            </span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;child&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">     \n                &lt;child-child/&gt;\n            </span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;child-child&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        inject<span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">     \n             &lt;div&gt; {{count}}&lt;/div&gt;\n            </span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#root&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><ul><li>注意：在provide这里无法使用this.count如果需要使用需要将provide转成函数对象</li><li>这里需要注意 使用provide传递的值不是双向绑定的，之后修改this.count无法传递给子组件</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token function">provide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n     <span class="token keyword">return</span> <span class="token punctuation">{</span>\n         count<span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token punctuation">;</span>\n     <span class="token punctuation">}</span>\n <span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="组件" tabindex="-1"><a class="header-anchor" href="#组件" aria-hidden="true">#</a> 组件</h2><h3 id="父子组件之间的通信" tabindex="-1"><a class="header-anchor" href="#父子组件之间的通信" aria-hidden="true">#</a> 父子组件之间的通信</h3><h4 id="emit方法" tabindex="-1"><a class="header-anchor" href="#emit方法" aria-hidden="true">#</a> $emit方法</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> test <span class="token operator">=</span> <span class="token punctuation">{</span>\n    props<span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;count&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    emits<span class="token operator">:</span><span class="token punctuation">{</span>\n        <span class="token function-variable function">addOne</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token parameter">count</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n            <span class="token keyword">if</span><span class="token punctuation">(</span>count<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                <span class="token keyword">return</span> ture<span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment">//emits属性可以统计子组件向外传递的参数，同时还可以做值的校验，值可以是对象也可以是数组[&#39;addOne&#39;]</span>\n    methods<span class="token operator">:</span><span class="token punctuation">{</span>\n           <span class="token function">addOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;addOne&#39;</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//使用$emit通知父组件</span>\n           <span class="token punctuation">}</span> \n\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        template<span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n               &lt;div @click =&#39;addOne&#39; &gt;{{count}}&lt;/div&gt;\n        </span><span class="token template-punctuation string">`</span></span>\n\n <span class="token punctuation">}</span> \n <span class="token keyword">const</span> app <span class="token operator">=</span>  Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n          <span class="token keyword">return</span> <span class="token punctuation">{</span>\n             count<span class="token operator">:</span><span class="token number">1</span>\n            <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      methods<span class="token operator">:</span><span class="token punctuation">{</span>\n        <span class="token function">handAddOne</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token operator">=</span>e<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        template<span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n        &lt;div&gt;\n           &lt;counter :count =&#39;count&#39; @add-one = &#39;handAddOne&#39;/&gt;   \n        &lt;/div&gt;\n        </span><span class="token template-punctuation string">`</span></span>\n        <span class="token comment">//使用@add-one监听传递时间，注意此处驼峰要改成-，监听出发handAddOne方法</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;counter&#39;</span><span class="token punctuation">,</span>test<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#root&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><p>使用V-model传递值</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> test <span class="token operator">=</span> <span class="token punctuation">{</span>\n    props<span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;modelValue&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token comment">//此处必须要使用modelValue变量,如果使用其他变量父组件传值的时候需要v-model:xxx =‘’</span>\n    methods<span class="token operator">:</span><span class="token punctuation">{</span>\n        <span class="token function">handleItemClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;update:modelValue&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>modelValue <span class="token operator">+</span> <span class="token number">4</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>\n           <span class="token punctuation">}</span> \n\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        template<span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n               &lt;div @click =&#39;handleItemClick&#39; &gt;{{modelValue}}&lt;/div&gt;\n        </span><span class="token template-punctuation string">`</span></span>\n\n <span class="token punctuation">}</span> \n <span class="token keyword">const</span> app <span class="token operator">=</span>  Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n          <span class="token keyword">return</span> <span class="token punctuation">{</span>\n             count<span class="token operator">:</span><span class="token number">1</span>\n            <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        template<span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n           &lt;counter v-model =&#39;count&#39; /&gt;\n        </span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;counter&#39;</span><span class="token punctuation">,</span>test<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#root&#39;</span><span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>传值的时候给v-model加上修饰符</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> props<span class="token operator">:</span><span class="token punctuation">{</span>\n        <span class="token string">&#39;count&#39;</span><span class="token operator">:</span>String<span class="token punctuation">,</span>\n        <span class="token string">&#39;countModifiers&#39;</span><span class="token operator">:</span><span class="token punctuation">{</span>\n            <span class="token function-variable function">default</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment">//如果v-model没有传入修饰符则使用default作为它的值，没有声明count这里用modelValue和modelModifiers</span>\n    methods<span class="token operator">:</span><span class="token punctuation">{</span>\n        <span class="token function">handleItemClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                <span class="token keyword">let</span> newVlaue <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">+</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">;</span>\n                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>countModifiers<span class="token punctuation">.</span>uppercase<span class="token punctuation">)</span><span class="token punctuation">{</span>\n                    newVlaue <span class="token operator">=</span> newVlaue<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;update:count&#39;</span><span class="token punctuation">,</span> newVlaue<span class="token punctuation">)</span><span class="token punctuation">;</span>\n           <span class="token punctuation">}</span> <span class="token punctuation">,</span>\n       \n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>countModifiers<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        template<span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n               &lt;div @click =&#39;handleItemClick&#39; &gt;{{count}}&lt;/div&gt;\n        </span><span class="token template-punctuation string">`</span></span>\n\n <span class="token punctuation">}</span> \n <span class="token keyword">const</span> app <span class="token operator">=</span>  Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n          <span class="token keyword">return</span> <span class="token punctuation">{</span>\n             count<span class="token operator">:</span><span class="token string">&#39;a&#39;</span>\n            <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n     \n        template<span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n           &lt;counter v-model:count.uppercase =&#39;count&#39;  /&gt;\n        </span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">//这里传入的时候如果没有count就是使用modelValue</span>\n    app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;counter&#39;</span><span class="token punctuation">,</span>test<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#root&#39;</span><span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><h3 id="插槽" tabindex="-1"><a class="header-anchor" href="#插槽" aria-hidden="true">#</a> 插槽</h3><ul><li>插槽传递的可以是html结构也可以是变量甚至可以是其他组件，字符串数字等，<strong>slot标签上不可以绑定事件</strong></li><li>slot的作用域</li></ul><ol><li>父模版里调用的数据属性，使用的都是父模版里的数据</li><li>子模版里调用的数据属性，使用的都是子模版里的数据</li></ol><ul><li>slot中间的为默认值</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//slot插槽 &lt;slot&gt;&lt;/slot&gt;</span>\n   <span class="token keyword">const</span> test <span class="token operator">=</span> <span class="token punctuation">{</span>\n       methods<span class="token operator">:</span><span class="token punctuation">{</span>\n           <span class="token function">handleClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n               <span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span>\n           <span class="token punctuation">}</span>\n       <span class="token punctuation">}</span><span class="token punctuation">,</span>\n       template<span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n          &lt;div&gt;\n               &lt;input /&gt;\n               &lt;span @click=&#39;handleClick&#39;&gt;\n               &lt;slot&gt;default value&lt;/slot&gt;\n               &lt;/span&gt;\n           &lt;/div&gt;\n       </span><span class="token template-punctuation string">`</span></span>\n   <span class="token punctuation">}</span> \n  \n   <span class="token keyword">const</span> app <span class="token operator">=</span>  Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n   template<span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n          &lt;myform&gt;\n               &lt;zj/&gt;\n           &lt;/myform&gt;\n           &lt;myform&gt;\n               &lt;button&gt;提交&lt;/button&gt;\n           &lt;/myform&gt;\n       </span><span class="token template-punctuation string">`</span></span>\n   <span class="token punctuation">}</span><span class="token punctuation">)</span>\n   app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;zj&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n       template<span class="token operator">:</span><span class="token string">&#39;&lt;div&gt;zj&lt;/div&gt;&#39;</span>\n   <span class="token punctuation">}</span><span class="token punctuation">)</span>\n   app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;myform&#39;</span><span class="token punctuation">,</span>test<span class="token punctuation">)</span><span class="token punctuation">;</span>\n   app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#root&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><h4 id="具名插槽" tabindex="-1"><a class="header-anchor" href="#具名插槽" aria-hidden="true">#</a> 具名插槽</h4><ul><li>注意具名插槽 父组件调用时候的写法 v-slot:footer ，此处不需要引号</li><li>v-slot:footer可以简写为#footer</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> test <span class="token operator">=</span> <span class="token punctuation">{</span>\n        template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n           &lt;div&gt;\n             &lt;slot name=&#39;header&#39;&gt;&lt;/slot&gt;\n               &lt;div&gt; content &lt;/div&gt;\n             &lt;slot name=&#39;footer&#39;&gt;&lt;/slot&gt;\n            &lt;/div&gt;\n        </span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">     \n                &lt;layout&gt;\n                    &lt;template #header&gt;\n                        &lt;div&gt;header&lt;/div&gt;\n                    &lt;/template&gt;\n                    &lt;template v-slot:footer&gt;\n                        &lt;div&gt;footer&lt;/div&gt;\n                    &lt;/template&gt;    \n                &lt;/layout&gt;\n            </span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n    app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;layout&#39;</span><span class="token punctuation">,</span> test<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#root&#39;</span><span class="token punctuation">)</span>\n\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h4 id="作用域插槽" tabindex="-1"><a class="header-anchor" href="#作用域插槽" aria-hidden="true">#</a> 作用域插槽</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> test <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                list<span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n           &lt;div&gt;\n                &lt;slot v-for=&#39;item in list&#39; :item=&#39;item&#39;/&gt;\n           &lt;/div&gt;\n        </span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">     \n                &lt;list v-slot=&#39;{slotProps}&#39;&gt;\n                    &lt;span&gt;{{slotProps.item}}&lt;/span&gt;\n                &lt;list/&gt;\n            </span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token comment">//这里的写法可以使用es6 的解构写法</span>\n    <span class="token comment">// &lt;list v-slot=&#39;{item}&#39;&gt;</span>\n    <span class="token comment">//  &lt;span&gt;{{item}}&lt;/span&gt;</span>\n    <span class="token comment">// &lt;list/&gt;</span>\n\n    app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;list&#39;</span><span class="token punctuation">,</span> test<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#root&#39;</span><span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h3 id="动态组件" tabindex="-1"><a class="header-anchor" href="#动态组件" aria-hidden="true">#</a> 动态组件</h3><ul><li>动态组件：根据数据的变化，使用component这个标签，来随时动态的切换组件</li><li>keep-alive标签可以缓存input框中的内容，切回来以后依然保存值</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token keyword">const</span> test <span class="token operator">=</span> <span class="token punctuation">{</span>\n        template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n            &lt;input /&gt;\n        </span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                currentItem<span class="token operator">:</span><span class="token string">&#39;input-item&#39;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        methods<span class="token operator">:</span><span class="token punctuation">{</span>\n            <span class="token function">handleClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>currentItem<span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>currentItem<span class="token operator">===</span><span class="token string">&#39;input-item&#39;</span><span class="token operator">?</span><span class="token string">&#39;common-item&#39;</span><span class="token operator">:</span><span class="token string">&#39;input-item&#39;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n             &lt;keep-alive&gt;\n                &lt;component :is=&#39;currentItem&#39;/&gt;\n             &lt;/keep-alive&gt;   \n            &lt;button @click=&#39;handleClick&#39;&gt; 切换&lt;/button&gt;\n            </span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;common-item&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">     \n             &lt;div&gt; hello world&lt;/div&gt;\n            </span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;input-item&#39;</span><span class="token punctuation">,</span> test<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#root&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h3 id="异步组件" tabindex="-1"><a class="header-anchor" href="#异步组件" aria-hidden="true">#</a> 异步组件</h3><ul><li>异步组件: 是异步执行组件的逻辑</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">const</span> AsynCommonItem <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">defineAsyncComponent</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n                <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n                    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                        template<span class="token operator">:</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div&gt;这是一个异步组件&lt;/div&gt;</span><span class="token template-punctuation string">`</span></span>\n                    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">4000</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n                &lt;common-item /&gt;\n                &lt;asyn-common-item/&gt;\n            </span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;common-item&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">     \n             &lt;div&gt; hello world&lt;/div&gt;\n            </span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;asyn-common-item&#39;</span><span class="token punctuation">,</span>AsynCommonItem<span class="token punctuation">)</span>\n  \n    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#root&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h2 id="动画-过渡效果" tabindex="-1"><a class="header-anchor" href="#动画-过渡效果" aria-hidden="true">#</a> 动画/过渡效果</h2><h3 id="基础过渡动画绑定事件" tabindex="-1"><a class="header-anchor" href="#基础过渡动画绑定事件" aria-hidden="true">#</a> 基础过渡动画绑定事件</h3><h4 id="使用class" tabindex="-1"><a class="header-anchor" href="#使用class" aria-hidden="true">#</a> 使用class</h4><ul><li>return animate里面的变量会把css里面声明的赋给div</li></ul><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code>       <span class="token atrule"><span class="token rule">@keyframes</span> leftToRight</span> <span class="token punctuation">{</span>\n            <span class="token selector">0%</span><span class="token punctuation">{</span>\n                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-100px<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n            <span class="token selector">50%</span><span class="token punctuation">{</span>\n                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>100px<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n            <span class="token selector">100%</span><span class="token punctuation">{</span>\n                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n        \n        <span class="token selector">.animation</span><span class="token punctuation">{</span>\n            <span class="token property">animation</span><span class="token punctuation">:</span> leftToRight 3s<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token selector">.transition</span><span class="token punctuation">{</span>\n            <span class="token property">transition</span><span class="token punctuation">:</span> 3s background-color ease<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token selector">.blue</span><span class="token punctuation">{</span>\n            <span class="token property">background</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token selector">.green</span><span class="token punctuation">{</span>\n            <span class="token property">background</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//过渡、动画</span>\n    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                animate<span class="token operator">:</span><span class="token punctuation">{</span>\n                    transition<span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>\n                    animation<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                    blue<span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>\n                    green<span class="token operator">:</span><span class="token boolean">false</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        methods<span class="token operator">:</span><span class="token punctuation">{</span>\n            <span class="token function">handleClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>animate<span class="token punctuation">.</span>blue <span class="token operator">=</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>animate<span class="token punctuation">.</span>blue<span class="token punctuation">;</span> \n                <span class="token keyword">this</span><span class="token punctuation">.</span>animate<span class="token punctuation">.</span>green <span class="token operator">=</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>animate<span class="token punctuation">.</span>green<span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n            &lt;div&gt;\n              &lt;div :class=&#39;animate&#39; &gt;hello world&lt;/div&gt;\n              &lt;button @click=&#39;handleClick&#39;&gt;切换&lt;/button&gt;\n            &lt;/div&gt;   \n\n            </span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n   \n    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#root&#39;</span><span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h4 id="使用style" tabindex="-1"><a class="header-anchor" href="#使用style" aria-hidden="true">#</a> 使用style</h4><ul><li>通过 :style 和：class可以将对象animate或者styleObj动态添加到div上</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                animate<span class="token operator">:</span><span class="token punctuation">{</span>\n                    transition<span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>\n                    animation<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                    blue<span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>\n                    green<span class="token operator">:</span><span class="token boolean">false</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                styleObj<span class="token operator">:</span><span class="token punctuation">{</span>\n                    background<span class="token operator">:</span><span class="token string">&quot;blue&quot;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        methods<span class="token operator">:</span><span class="token punctuation">{</span>\n            <span class="token function">handleClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>styleObj<span class="token punctuation">.</span>background <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>styleObj<span class="token punctuation">.</span>background<span class="token operator">==</span><span class="token string">&#39;blue&#39;</span><span class="token operator">?</span><span class="token string">&quot;green&quot;</span><span class="token operator">:</span><span class="token string">&quot;blue&quot;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n            &lt;div&gt;\n              &lt;div class=&#39;transition&#39; :style=&#39;styleObj&#39; &gt;hello world&lt;/div&gt;\n              &lt;button @click=&#39;handleClick&#39;&gt;切换&lt;/button&gt;\n            &lt;/div&gt;   \n\n            </span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h3 id="单元素组件的过渡" tabindex="-1"><a class="header-anchor" href="#单元素组件的过渡" aria-hidden="true">#</a> 单元素组件的过渡</h3><ul><li>通过transition标签使得里面的元素在v-if或者v-show的时候添加动画效果</li><li>如果transition name=&#39;hello&#39;标签使用了name,那么css的v-enter-active需要修改为 hello-enter-active</li></ul><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code>* 也可以在transition上声明 enter-active-class=<span class="token string">&#39;hello&#39;</span>\n <span class="token atrule"><span class="token rule">@keyframes</span> shake</span><span class="token punctuation">{</span>\n            <span class="token selector">0%</span><span class="token punctuation">{</span>\n                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-100px<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n            <span class="token selector">50%</span><span class="token punctuation">{</span>\n                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-50px<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n            <span class="token selector">100%</span><span class="token punctuation">{</span>\n                <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>50px<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n        <span class="token selector">.v-enter-from</span><span class="token punctuation">{</span><span class="token punctuation">}</span>\n        <span class="token selector">.v-enter-to</span><span class="token punctuation">{</span><span class="token punctuation">}</span>\n        <span class="token selector">.v-enter-active</span><span class="token punctuation">{</span>\n            <span class="token property">animation</span><span class="token punctuation">:</span>shake 3s<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token selector">.hello-enter-active</span><span class="token punctuation">{</span>\n            <span class="token property">animation</span><span class="token punctuation">:</span>shake 3s<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n       <span class="token selector">.v-leave-active</span><span class="token punctuation">{</span>\n        <span class="token property">animation</span><span class="token punctuation">:</span>shake 3s<span class="token punctuation">;</span>\n       <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token comment">//单元素单组件入场和出场动画</span>\n    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token punctuation">{</span>\n               show<span class="token operator">:</span> <span class="token boolean">false</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        methods<span class="token operator">:</span><span class="token punctuation">{</span>\n            <span class="token function">handleClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>show <span class="token operator">=</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>show<span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n            &lt;div&gt;\n              &lt;transition name=&#39;hello&#39;&gt;\n                &lt;div v-if=&#39;show&#39;&gt;hello world&lt;/div&gt;\n              &lt;/transition&gt;\n              &lt;button @click=&#39;handleClick&#39;&gt;切换&lt;/button&gt;\n            &lt;/div&gt;   \n            </span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n   \n    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#root&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><ul><li>如果动画和过渡时间不一致,在transition标签上加上 type=&#39;transition&#39;，会以transition的时间为准，同理如果是animation</li><li>使用:duration = &quot;1000&quot;可以同时控制过渡和动画时间为1秒，:duration 可以接收对象{enter:1000,leave:3000}控制入场和出场</li></ul><h3 id="使用js编写过渡动画" tabindex="-1"><a class="header-anchor" href="#使用js编写过渡动画" aria-hidden="true">#</a> 使用js编写过渡动画</h3><ul><li>使用vue的钩子实现js的动画效果，性能并不如css</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token comment">//单元素单组件入场和出场动画</span>\n    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token punctuation">{</span>\n               show<span class="token operator">:</span> <span class="token boolean">false</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        methods<span class="token operator">:</span><span class="token punctuation">{</span>\n            <span class="token function">handleClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                <span class="token keyword">this</span><span class="token punctuation">.</span>show <span class="token operator">=</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>show<span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token function">handleBeforeEnter</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span><span class="token string">&#39;red&#39;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token function">handleEnterActive</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span>done</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n              <span class="token keyword">const</span> animation <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n                    <span class="token keyword">const</span> color <span class="token operator">=</span> el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color<span class="token punctuation">;</span>\n                    <span class="token keyword">if</span><span class="token punctuation">(</span>color <span class="token operator">===</span><span class="token string">&#39;red&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                        el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span><span class="token string">&#39;blue&#39;</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\n                        el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span><span class="token string">&#39;red&#39;</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span>\n                <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                    <span class="token function">clearInterval</span><span class="token punctuation">(</span>animation<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">5000</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token function">handleEnterEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n           \n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n            &lt;div&gt;\n              &lt;transition \n                :css=&#39;false&#39;\n                @before-enter=&#39;handleBeforeEnter&#39;   el\n                @enter=&#39;handleEnterActive&#39;  el done(执行完成的回调)\n                @after-enter =&quot;handleEnterEnd&quot; el\n                @before-leave=\n                @leave=\n                @leave-after=\n              &gt;\n                &lt;div v-show=&#39;show&#39;&gt;hello world&lt;/div&gt;\n              &lt;/transition&gt;\n              &lt;button @click=&#39;handleClick&#39;&gt;切换&lt;/button&gt;\n            &lt;/div&gt;   \n            </span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n   \n    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#root&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br></div></div><h3 id="列表动画" tabindex="-1"><a class="header-anchor" href="#列表动画" aria-hidden="true">#</a> 列表动画</h3><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">.list-item</span><span class="token punctuation">{</span>\n           <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>\n           <span class="token property">margin-right</span><span class="token punctuation">:</span> 1em<span class="token punctuation">;</span>\n       <span class="token punctuation">}</span>\n       <span class="token selector">.v-enter-from</span><span class="token punctuation">{</span>\n           <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n           <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>30px<span class="token punctuation">)</span><span class="token punctuation">;</span>\n       <span class="token punctuation">}</span>\n       <span class="token selector">.v-enter-active</span><span class="token punctuation">{</span>\n           <span class="token property">transition</span><span class="token punctuation">:</span> all 1s ease-in<span class="token punctuation">;</span>\n       <span class="token punctuation">}</span>\n       <span class="token selector">.v-enter-to</span><span class="token punctuation">{</span>\n           <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>\n           <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>\n       <span class="token punctuation">}</span>\n       <span class="token selector">.v-move</span><span class="token punctuation">{</span>           //这个属性默认是列表的其他元素的动画效果\n           <span class="token property">transition</span><span class="token punctuation">:</span> all 1s ease-in<span class="token punctuation">;</span>\n       <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><ul><li>注意：使用transition-group里面的元素必须要写:key=&quot;item&quot;否则会报错</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token comment">//列表动画的实现</span>\n    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token punctuation">{</span>\n               list<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        methods<span class="token operator">:</span><span class="token punctuation">{</span>\n           <span class="token function">handleClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n               <span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">.</span>length <span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>\n           <span class="token punctuation">}</span>\n           <span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n            &lt;div&gt;\n             &lt;transition-group&gt;   \n              &lt;span class=&#39;list-item&#39; v-for=&#39;item in list&#39; :key=&quot;item&quot;&gt;{{item}}&lt;/span&gt; \n             &lt;/transition-group&gt;\n              &lt;button @click=&#39;handleClick&#39;&gt;增加&lt;/button&gt;\n            &lt;/div&gt;   \n            </span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n   \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h3 id="状态动画" tabindex="-1"><a class="header-anchor" href="#状态动画" aria-hidden="true">#</a> 状态动画</h3><ul><li>类似于数字滚动的效果</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token punctuation">{</span>\n               number<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>\n               animateNumber<span class="token operator">:</span><span class="token number">1</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        methods<span class="token operator">:</span><span class="token punctuation">{</span>\n           <span class="token function">handleClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n               <span class="token keyword">this</span><span class="token punctuation">.</span>number <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>\n               <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>animateNumber<span class="token operator">&gt;=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                   <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n               <span class="token punctuation">}</span>\n               <span class="token keyword">let</span> currentNumber <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>animateNumber<span class="token punctuation">;</span>\n               <span class="token keyword">const</span> animation <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n                   \n                   <span class="token keyword">this</span><span class="token punctuation">.</span>animateNumber <span class="token operator">+=</span><span class="token number">1</span><span class="token punctuation">;</span>\n                   <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>animateNumber <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span>number<span class="token punctuation">)</span><span class="token punctuation">{</span>\n                       <span class="token function">clearInterval</span><span class="token punctuation">(</span>animation<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                   <span class="token punctuation">}</span>\n               <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span>\n           <span class="token punctuation">}</span>\n           <span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n            &lt;div&gt;\n               &lt;span&gt;{{animateNumber}}&lt;/span&gt;\n              &lt;button @click=&#39;handleClick&#39;&gt;增加&lt;/button&gt;\n            &lt;/div&gt;   \n            </span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n   \n    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#root&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h2 id="vue中的高级语法" tabindex="-1"><a class="header-anchor" href="#vue中的高级语法" aria-hidden="true">#</a> vue中的高级语法</h2>',64),t={render:function(n,s){return p}}}}]);